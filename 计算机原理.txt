1、对硬件的抽象，虚拟存储器、文件、网络、进程、线程等
2、一个hello word文件的执行，首先是扫描到用户输入，通过CUP到达主存，然后enter键后加载文件到主存，最后CUP执行文件后输出
3、信息的存储被抽象成一个数组，每一个元素有唯一的地址空间，对32位的系统表示的地址空间就会少于64位的，寻址从初始内存地址开始的
4、计算机用二进值，人一般用十六进值去表示
5、大端序与小端序，一个数据需要多字节存储，那么存储方式就有这两种，方式只在硬件层区分；大端序是书写顺序进行存储的，小端序反之
6、机器数是带符号的，在计算机用一个数的最高位存放符号, 正数为0, 负数为1。所以8位二进制数的取值范围就是:
[1111 1111 , 0111 1111]即[-127 , 127]
7、整数的反码，补码都是它本身，负数的反码符号位保持不变其他为相反，补码在反码上加一
计算机有补码表示是因为，原码计算负数不正确（只有加法运算，把符号带进运算）
然后加入反码计算，但反码会有0和-0情况，最后加入补码计算因为多了-0（即11111111），所以补码可以多表示一位-128
[-128 , 127]
8、8位数字只能表示[-128 , 127]，之外的就溢出了
9、浮点数存储是符号位+指数+尾数（单精度32位 双精度64位）
  浮点数转二进制是剩2取整数，再剩2，直至为0。很多数是无理数，而存储是有限位，所以出现二进制表示的小数失真
10、乘法就是位移，乘以2就移一次，乘以3就移一次加1，乘以4就2次
11、除法就是让被除数连续减去几次除数，直到差小于除数时为止，这样减去的次数就是商，剩下的差就是余数
12、cup运行方式
  cup本质是就是运算，不认识代码的，只是一堆元件，运行高（1）低（0）电流。指令集被写死在cup结构中后被翻译为10电流执行
  汇编代码就是操作这些指令。然后就是汇编是面向机器的，所以有了高级语言c php等，那些函数、变量对象等都是人类思维的抽象
  而转化为机器语言的就是编译器
13、计算机科学-计算
  图灵以图灵机的方式形象的定义了什么是计算。图灵机就是指一个抽象的机器，它有一条无限长的纸带，纸带分成了一个一个的小方格，
  每个方格有不同的颜色。有一个机器头在纸带上移来移去。机器头有一组内部状态，还有一些固定的程序。在每个时刻，
  机器头都要从当前纸带上读入一个方格信息，然后结合自己的内部状态查找程序表，根据程序输出信息到纸带方格上，并转换自己的内部状态，
  然后进行移动
14、cup、操作系统访问内存
  1）确切的说，应该是32位CPU最大支持4G内存
       因为32位CPU有32根地址总线，每根线0或1，总共2^32种可能性，2^32个内存地址，每个内存地址对应1个字节的内容，所以是4G
  2）因为32位操作系统本身只是为32位cpu设计的，所以32位系统下，即便是64位的CPU，也仅有32根地址线工作
       这是操作系统的限制吧，32位操作系统，只编址到32位
  3）硬件CPU的位数决定了最大值，而操作系统决定了实际的值
