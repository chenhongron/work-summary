大型网站架构的演变

最开始把网站所以东西都放在一台服务器，但随着访问的进入，出现访问慢，空间不够
1.应用服务与数据服务分离，业务应用服务器、文件服务器、数据库服务器分离，3台

随着访问增多，数据库压力变大，延迟
2.使用缓存，本地缓存和分布式远程服务
因为本地缓存会和业务争抢内存、资源，所以要加远程缓存

当某个访问高峰期来到时，单一应用服务器遇到瓶颈
3.应用服务器集群，这样改善了网站的并发能力

如果有更多的用户访问，有的缓存不命中、过期时，会对数据库造成压力
4.数据库读写分离，以减轻读的压力

随着业务的增长，如果数据库压力还是大，这个时候就要
5.分布式数据库，通常是拆分不同业务的表到不同服务器数据库上，这是优化的最后阶段

针对系统各个模块的复杂场景，需要
6.业务拆分与分布式服务，不同业务独立部署，消息队列。把公共的业务服务分布式独立部署

之外还有，cdn，因为中国地大。nosql搜索引擎，减少数据库负担

高性能架构
（针对性能测试报告优化）
web前端：浏览器缓存、cdn
应用服务端：分布式缓存、分布式集群、异步和代码优化
数据端：固态硬盘、数据结构（b树等）、内存缓存

高可用架构
（针对可用度2个9，3个9优化）
应用端：失效转移、session管理
服务端：分布式服务、微服务
数据端：分布式事务、数据备份、失效转移
还有自动发布、版本控制、自动化测试、监控管理

高伸缩性架构
（针对资源利用率优化）
架构的伸缩：物理分离、架构集群
集群伸缩：服务集群、缓存集群、数据服务器集群

高扩展性架构
（针对产品推陈出新能力优化）
降低耦合度（事件驱动架构、分布式消息队列）、
分布式本身具备可扩展性、非关系型数据库、
打造产品生态链
